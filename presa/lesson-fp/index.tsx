import React from 'react'
import ReactDOM from 'react-dom'
import { Presentation, Fragment } from '@saitonakamura/presa'
import {
  GlobalStyle,
  AlertSlide,
  Alert,
  Card,
  Avatar,
  CardContent,
  CardTitle,
  CardDesc,
  TitleSlide,
  Text,
  OuterLink,
  List,
  ListItem,
  NoticeBlock,
  CenteredPlainLayout,
  FullWidthFragment,
} from '../lib/blocks'
import {
  CheckRecordSlide,
  RulesSlide,
  QuestionsSlide,
  CheckSoundVideoSlide,
  MicrophoneSlide,
} from '../lib/slides'
import { theme } from '../lib/theme'
import { AnimatedSlide } from '../lib/useAnimatedSteps'
import { animated } from 'react-spring'
import { CenteredLayout } from '@saitonakamura/presa/lib/components/slide/layouts'

const PuritySlides = [
  <AlertSlide
    key='pure'
    name='–ß–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏'
    alert='–ß–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏'
  ></AlertSlide>,
]

const CurrySlides = [
  <AlertSlide
    key='curry'
    name='–ö–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'
    alert='–ö–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ'
  ></AlertSlide>,
]

const InferenceSlides = [
  <AlertSlide key='infer' name='–í—ã–≤–æ–¥ —Ç–∏–ø–æ–≤' alert='–í—ã–≤–æ–¥ —Ç–∏–ø–æ–≤'></AlertSlide>,
]

const App = () => (
  <>
    <Presentation
      name='Otus React Course: —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'
      theme={theme}
    >
      {CheckRecordSlide}
      {CheckSoundVideoSlide}
      {RulesSlide}

      <AnimatedSlide<{
        card: {
          position: 'absolute'
          top: string
          left: string
          transform: string
        }
      }>
        name='–§–ü'
        steps={[
          {
            card: {
              position: 'absolute',
              top: '150%',
              left: '50%',
              transform: 'translate(-50%, -50%) scale(1)',
            },
          },
          {
            card: {
              top: '80%',
            },
          },
          {
            card: {
              top: '50%',
              left: '50%',
              transform: 'translate(-50%, -50%) scale(2)',
            },
          },
        ]}
      >
        {(styles) => (
          <React.Fragment>
            <Alert>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ</Alert>
            <animated.div style={styles.card}>
              <Card>
                <Avatar />
                <CardContent>
                  <CardTitle>–ú–∞–π–∫ –ë–∞—à—É—Ä–æ–≤</CardTitle>
                  <CardDesc>Senior Frontend Engineer @ WiseBits</CardDesc>
                  <CardDesc>@saitonakamura</CardDesc>
                </CardContent>
              </Card>
            </animated.div>
          </React.Fragment>
        )}
      </AnimatedSlide>

      <TitleSlide name='–¢–µ—Å—Ç' title='–í—Ä–µ–º—è –¥–ª—è —Ç–µ—Å—Ç–∞' layout={CenteredLayout}>
        <OuterLink href='https://docs.google.com/forms/d/e/1FAIpQLSeRg-69hhmcBkqe3MLM0xM83QJVj9yN7PCNDDAUyDQKf_dR6Q/viewform?usp=sf_link'>
          <Text size={150}>üß™</Text>
        </OuterLink>
      </TitleSlide>

      <MicrophoneSlide
        name='–ß—Ç–æ –∑–Ω–∞–µ—Ç–µ –æ–± –§–ü'
        title='–ß—Ç–æ –≤—ã –∑–Ω–∞–µ—Ç–µ/—Å–ª—ã—à–∞–ª–∏ –æ–± –§–ü? –ß—Ç–æ –±—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å?'
      />

      <TitleSlide name='–ó–∞—á–µ–º' title='–ó–∞—á–µ–º —ç—Ç–æ –≤—Å—ë?' layout={CenteredLayout}>
        <List gapSize={70}>
          <Fragment>
            <ListItem>
              <Text size={45}>–§–ü –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–∏–µ–º—É—â–µ—Å—Ç–≤</Text>
            </ListItem>
          </Fragment>
          <Fragment>
            <ListItem>
              <Text size={45}>–ï–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –±–∏–±–ª–∏–æ—Ç–µ–∫</Text>
            </ListItem>
          </Fragment>
          <Fragment>
            <ListItem>
              <Text size={45}>–í—ã —É–∂–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ</Text>
            </ListItem>
          </Fragment>
        </List>
      </TitleSlide>

      <TitleSlide
        name='–ö–∞—Ä—Ç–∞'
        title='–ö–∞—Ä—Ç–∞ –≤–µ–±–∏–Ω–∞—Ä–∞'
        layout={CenteredPlainLayout}
      >
        <List gapSize='s'>
          <FullWidthFragment>
            <ListItem>
              <NoticeBlock>–ß–∏—Å—Ç–æ—Ç–∞ üßº</NoticeBlock>
            </ListItem>
          </FullWidthFragment>
          <FullWidthFragment>
            <ListItem>
              <NoticeBlock>–ö–∞—Ä—Ä–∏ üç≤</NoticeBlock>
            </ListItem>
          </FullWidthFragment>
          <FullWidthFragment>
            <ListItem>
              <NoticeBlock>–í—ã–≤–æ–¥ —Ç–∏–ø–æ–≤ ‚ú®</NoticeBlock>
            </ListItem>
          </FullWidthFragment>
          <FullWidthFragment>
            <ListItem>
              <NoticeBlock>–ú–æ–Ω–∞–¥—ã üòà</NoticeBlock>
            </ListItem>
          </FullWidthFragment>
        </List>
      </TitleSlide>

      {...PuritySlides}

      {...CurrySlides}

      {...InferenceSlides}

      <TitleSlide name='–î–æ–ø –º–∞—Ç–µ—Ä–∏–∞–ª—ã' title='–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'>
        <List>
          <ListItem>
            <OuterLink href='https://mostly-adequate.gitbooks.io/mostly-adequate-guide/'>
              <Text size='m'>‚ñ™ –ö–Ω–∏–≥–∞ –ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞ –§—Ä–∏—Å–±–∏ ü¶ù</Text>
            </OuterLink>
          </ListItem>
          <ListItem>
            <OuterLink href='https://github.com/hmemcpy/milewski-ctfp-pdf'>
              <Text size='m'>‚ñ™ –¢–µ–æ—Ä–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤</Text>
            </OuterLink>
          </ListItem>
          <ListItem>
            <OuterLink href='https://blog.ploeh.dk/2017/10/04/from-design-patterns-to-category-theory/'>
              <Text size='m'>
                ‚ñ™ –ë–ª–æ–≥ –ú–∞—Ä–∫–∞ –°–∏–º–º–æ–Ω–∞: –æ—Ç –¥–∏–∑–∞–π–Ω –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∫ —Ç–µ–æ—Ä–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
              </Text>
            </OuterLink>
          </ListItem>
        </List>
      </TitleSlide>

      {QuestionsSlide}
    </Presentation>
    <GlobalStyle />
  </>
)

ReactDOM.render(<App />, document.querySelector('#root'))
